<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace要与接口类名对应 -->
<mapper namespace="xyz.zixiu.demo.dao.system.SystemMapper">

    <!-- id要与接口类内的方法名对应，parameterType要与方法的参数类型对应 -->
    <update id="CreateTable" >
        -- 01.系部
        create table department(  -- 系部
            id varchar(20) not null primary key,  -- 系部id(主键)
            name varchar(20) not null unique , -- 系部名称(唯一约束)
            college varchar(20) null  -- 所属学院，可以为空
        );

        -- 02.专业
        create table major(
            id varchar(20) not null primary key,  -- 专业id（主键）
            name varchar(20) not null unique, -- 专业名称（唯一约束）
            department varchar(20) not null  -- 所属系部，不能为空
        );

        -- 03.班级
        create table gradeclass(
            name varchar(20) not null primary key, -- 班级名称（主键）
            major varchar(20) not null,    -- 专业id
            schooling int not null,  --学制 2，3，4，5
            grade date not null, -- 记录年级和入学日期，不可为空
            director int not null -- 导员id
        );

        -- 04.学生
        create table student(
            id varchar(20) not null primary key,  -- 学号（主键）
            name varchar(20) not null unique, -- 姓名
            gradeclass varchar(20) not null,  -- 班级id
            phone varchar(20) null, -- 联系电话
            email varchar(30) null, -- 邮箱
            password varchar(20) not null -- 密码
            -- birthday date null  -- 生日
        );

        -- 05.教师
        create table teacher(
            id varchar(20) not null primary key,  -- 工号（主键）
            name varchar(20) not null unique, -- 姓名
            department varchar(20) not null,  -- 所属系部，不能为空
            phone varchar(20) null, -- 联系电话
            email varchar(30) null, -- 邮箱
            password varchar(20) not null -- 密码
            -- 	职位，职称，是否导员
        );

        -- 06.课程
        create table course(
            id varchar(20) not null primary key,  -- 课程id（主键）
            name varchar(20) not null, -- 课程名称
            test_type enum('考察','考试','待定') not null, -- 考查方式
            credit int not null -- 学分
        );

        -- 07.教室
        create table classroom(
            id varchar(20) not null primary key,  -- 教室id（主键）
            building_number varchar(20) not null, -- 楼号
            name varchar(20) not null, -- 教室名称
            type varchar(20) -- 教室类型
        );

        -- 08.课程-班级
        create table course_gradeclass(
            course varchar(20) not null,  -- 课程id
            gradeclass varchar(20) not null  -- 班级id
        );

        -- 09.课程-教师
        create table course_teacher(
            course varchar(20) not null,  -- 课程id
            teacher varchar(20) not null -- 教师id
        );

        -- 10.课程-教室
        create table course_classroom(
            course varchar(20) not null,  -- 课程id
            classroom varchar(20) not null,  -- 教室id
            semester varchar(20) not null,  -- 学期
            parity enum('单','双','全') not null,   -- 单周双周
            week int not null,  -- 周次
            day enum('Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday') not null -- 上课日期
        );

        -- 11.学期
        create table semester(
            id varchar(20) not null primary key  -- 学期，如2019-2020-1 = 2019-2020学年,第1学期
        );

        -- 12.夏令时-冬令时_课时表
        create table dst_time(
            dst enum('夏令时','冬令时') not null, -- 夏令时 or 冬令时
            Start time not null, -- 开始时间
            end time not null  -- 结束时间
        );

-- 13.夏令时-冬令时_实行日期表
        create table dst_date(
                                 dst enum('夏令时','冬令时') not null, -- 夏令时 or 冬令时
                                 Start date not null -- 开始时间
        );


    </update>



</mapper>